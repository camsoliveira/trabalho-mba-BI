
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.70 (7657) x86_64-apple-darwin15.6.0]

[History restored from /Users/camilaoliveira/.Rapp.history]

> library("readr")
> library("rpart")
> library("rpart.plot")
> arquivo<-read.csv(file="/Users/camilaoliveira/Downloads/Analise_DadosAreaBrotas.csv", sep=";", dec=",")
> dado<-subset(dados, select = c(nomeEstacao, Bairro, valorMedida, momento_transito, estação))
Error in subset(dados, select = c(nomeEstacao, Bairro, valorMedida, momento_transito,  : 
  object 'dados' not found
> dado<-subset(arquivo, select = c(nomeEstacao, Bairro, valorMedida, momento_transito, estação))
> trans = rpart(momento_transito~., data=arquivo, method="poisson", control = rpart.control(minsplit = 3))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

 1) root 113710 1.256455e+05 4.619576  
   2) hora_ssa=00:00,00:10,00:20,00:30,00:40,00:50,01:00,01:10,01:20,01:30,01:40,01:50,02:00,02:10,02:20,02:30,02:40,02:50,03:00,03:10,03:20,03:30,03:40,03:50,04:00,04:10,04:20,04:30,04:40,04:50,08:40,08:50,09:00,09:10,09:20,09:30,09:40,09:50,10:00,10:10,10:20,10:30,10:40,10:50,11:00,11:10,11:20,11:30,11:40,11:50,12:00,12:10,12:20,12:30,12:40,12:50,13:00,13:10,13:20,13:30,19:10,19:20,19:30,19:40,19:50,20:00,20:10,20:20,20:30,20:40,20:50,21:00,21:10,21:20,21:30 58455 2.364275e+04 2.764116  
     4) hora_ssa=11:30,11:40,11:50,12:00,12:10,12:20,12:30,12:40,12:50,13:00,13:10,13:20,13:30,19:10,19:20,19:30,19:40,19:50,20:00,20:10,20:20,20:30,20:40,20:50,21:00,21:10,21:20,21:30 19018 3.219593e+03 1.512970  
       8) hora_ssa=11:30,11:40,11:50,12:00,12:10,12:20,12:30,12:40,12:50,13:00,13:10,13:20,13:30 9263 6.626966e-05 1.000085 *
       9) hora_ssa=19:10,19:20,19:30,19:40,19:50,20:00,20:10,20:20,20:30,20:40,20:50,21:00,21:10,21:20,21:30 9755 1.648059e-05 2.000058 *
     5) hora_ssa=00:00,00:10,00:20,00:30,00:40,00:50,01:00,01:10,01:20,01:30,01:40,01:50,02:00,02:10,02:20,02:30,02:40,02:50,03:00,03:10,03:20,03:30,03:40,03:50,04:00,04:10,04:20,04:30,04:40,04:50,08:40,08:50,09:00,09:10,09:20,09:30,09:40,09:50,10:00,10:10,10:20,10:30,10:40,10:50,11:00,11:10,11:20 39437 2.661915e+03 3.367479  
      10) hora_ssa=00:00,00:10,00:20,00:30,00:40,00:50,01:00,01:10,01:20,01:30,01:40,01:50,02:00,02:10,02:20,02:30,02:40,02:50,03:00,03:10,03:20,03:30,03:40,03:50,04:00,04:10,04:20,04:30,04:40,04:50 24945 1.642433e-06 3.000014 *
      11) hora_ssa=08:40,08:50,09:00,09:10,09:20,09:30,09:40,09:50,10:00,10:10,10:20,10:30,10:40,10:50,11:00,11:10,11:20 14492 3.103010e-07 4.000009 *
   3) hora_ssa=05:00,05:10,05:20,05:30,05:40,05:50,06:00,06:10,06:20,06:30,06:40,06:50,07:00,07:10,07:20,07:30,07:40,07:50,08:00,08:10,08:20,08:30,13:40,13:50,14:00,14:10,14:20,14:30,14:40,14:50,15:00,15:10,15:20,15:30,15:40,15:50,16:00,16:10,16:20,16:30,16:40,16:50,17:00,17:10,17:20,17:30,17:40,17:50,18:00,18:10,18:20,18:30,18:40,18:50,19:00,21:40,21:50,22:00,22:10,22:20,22:30,22:40,22:50,23:00,23:10,23:20,23:30,23:40,23:50 55255 1.037660e+04 6.582492  
     6) hora_ssa=05:00,05:10,05:20,05:30,05:40,05:50,06:00,06:10,06:20,06:30,06:40,06:50,07:00,07:10,07:20,07:30,07:40,07:50,08:00,08:10,08:20,08:30,21:40,21:50,22:00,22:10,22:20,22:30,22:40,22:50,23:00,23:10,23:20,23:30,23:40,23:50 30084 1.212176e+03 5.662837 *
     7) hora_ssa=13:40,13:50,14:00,14:10,14:20,14:30,14:40,14:50,15:00,15:10,15:20,15:30,15:40,15:50,16:00,16:10,16:20,16:30,16:40,16:50,17:00,17:10,17:20,17:30,17:40,17:50,18:00,18:10,18:20,18:30,18:40,18:50,19:00 25171 7.230058e+02 7.681631 *
> trans = rpart(momento_transito~., data=dado, method="poisson", control = rpart.control(minsplit = 3))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 125645.5 4.619576 *
> trans = rpart(estação~., data=dado, method="poisson", control = rpart.control(minsplit = 3))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 60904.76 2.287451 *
> trans = rpart(nomeEstacao~., data=dado, method="poisson", control = rpart.control(minsplit = 3))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 62399.59 3.074215  
  2) estação=Outono 33728 19798.52 2.868627 *
  3) estação=Inverno,Primavera,Verão 79982 41932.92 3.160911 *
> trans = rpart(nomeEstacao~., data=dado, method="poisson", control = rpart.control(minsplit = 10))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 62399.59 3.074215  
  2) estação=Outono 33728 19798.52 2.868627 *
  3) estação=Inverno,Primavera,Verão 79982 41932.92 3.160911 *
> trans = rpart(nomeEstacao~., data=dado, method="anova", control = rpart.control(minsplit = 10))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 182354.70 3.074215  
  2) estação=Outono 33728  55344.88 2.868625 *
  3) estação=Inverno,Primavera,Verão 79982 124983.10 3.160911 *
> trans = rpart(nomeEstacao~valorMedida + momento_transito + bairro, data=dado, method="anova", control = rpart.control(minsplit = 10))
Error in eval(predvars, data, env) : object 'bairro' not found
> trans = rpart(nomeEstacao~valorMedida + momento_transito + Bairro, data=dado, method="anova", control = rpart.control(minsplit = 10))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 182354.7 3.074215 *
> trans = rpart(nomeEstacao~valorMedida + momento_transito + Bairro, data=dado, method="poisson", control = rpart.control(minsplit = 10))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 62399.59 3.074215 *
> trans = rpart(momento_transito ~ valorMedida + estação + Bairro + nomeEstacao, data=dado, method="poisson", control = rpart.control(minsplit = 10))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 125645.5 4.619576 *
> trans = rpart(momento_transito ~ valorMedida + estação + Bairro + nomeEstacao, data=dado, method="anova", control = rpart.control(minsplit = 10))
> trans
n= 113710 

node), split, n, deviance, yval
      * denotes terminal node

1) root 113710 540233.6 4.619576 *
> 